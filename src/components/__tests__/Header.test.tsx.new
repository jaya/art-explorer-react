/** @jest-environment jsdom */
import "@testing-library/jest-dom";
import { render, screen } from "@testing-library/react";
import { Header } from "../Header";

// Mock do componente ThemeToggle
jest.mock("@/components/ui/theme-toggle", () => ({
  ThemeToggle: () => <div data-testid="mock-theme-toggle">Theme Toggle</div>,
}));

// Mock do TypewriterSuggestion
jest.mock("@/components/ui/TypewriterSuggestion", () => ({
  __esModule: true,
  default: ({ text }: { text: string }) => (
    <div data-testid="typewriter-suggestion">{text}</div>
  ),
}));

// Mock do componente Icon
jest.mock("@/components/ui/icon", () => ({
  __esModule: true,
  default: ({ name, className }: { name: string; className?: string }) => (
    <div data-testid={`icon-${name}`} className={className}>
      {name}
    </div>
  ),
}));

// Mock para react-router-dom
jest.mock("react-router-dom", () => ({
  Link: ({ children, to }: { children: React.ReactNode; to: string }) => (
    <a href={to} data-testid={`link-${to}`}>
      {children}
    </a>
  ),
  useLocation: jest.fn(() => ({ pathname: "/" })),
}));

describe("Header", () => {
  const mockOnSearch = jest.fn();

  beforeEach(() => {
    jest.clearAllMocks();
  });

  test("deve renderizar corretamente todos os elementos do Header", () => {
    render(<Header onSearch={mockOnSearch} />);
    
    // Logo e título
    expect(screen.getByTestId("icon-palette")).toBeInTheDocument();
    expect(screen.getByText("Art Explorer")).toBeInTheDocument();
    
    // Links de navegação
    expect(screen.getByTestId("link-/")).toBeInTheDocument();
    expect(screen.getByTestId("link-/favoritos")).toBeInTheDocument();
    
    // Input de busca
    expect(screen.getByPlaceholderText("Buscar obras, artistas...")).toBeInTheDocument();
    
    // ThemeToggle
    expect(screen.getByTestId("mock-theme-toggle")).toBeInTheDocument();
    
    // Elementos mobile (ícones)
    expect(screen.getByTestId("icon-search")).toBeInTheDocument();
    expect(screen.getByTestId("icon-menu")).toBeInTheDocument();
  });
});
